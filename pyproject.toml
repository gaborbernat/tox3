# build system
[build-system]
requires = ['setuptools >= 38.2.4']
build-backend = 'setuptools.build_meta'

# tox configuration
[tool.tox3]
envlist = ['py36', 'combine', 'type', 'doc']

[tool.tox3.env]
basepython = 'python'
install_command = "pip install -U"

[tool.tox3.env._build]
build_wheel = true

[tool.tox3.env.py36]
basepython="python3.6"
description = 'run the unit tests with pytest'
change_dir = '<envsitepackagesdir>'
commands = ['coverage run --rcfile="<root_dir>/setup.cfg" --source=tox3  -m pytest <posargs> "<root_dir>/tests"',
             'coverage report --rcfile="<root_dir>/setup.cfg"']
set_env = {COVERAGE_FILE="<work_dir>/.coverage.<envname>"}
extras = ['testing']

[tool.tox3.env.py]
description = 'run the unit tests with pytest and whatever the current python is'
change_dir = '<envsitepackagesdir>'
commands = ['coverage run --rcfile="<root_dir>/setup.cfg" --source=tox3  -m pytest <posargs> "<root_dir>/tests"',
             'coverage report --rcfile="<root_dir>/setup.cfg"']
set_env = {COVERAGE_FILE="<work_dir>/.coverage.<envname>"}
extras = ['testing']

[tool.tox3.env.codecov]
skip_install = true
pass_env = ["CI", "TRAVIS", "TRAVIS_*", "CODECOV_ENV", "APPVEYOR_*", "APPVEYOR"]
description = "[only run on CI]: upload coverage data to codecov (depends on coverage running first)"
deps = ["codecov >= 2.0.13, <3"]
set_env = {COVERAGE_FILE="<work_dir>/.coverage"}
commands = ['coverage combine --rcfile="<root_dir>/setup.cfg"',
             'coverage xml -o "<work_dir>/coverage.xml"',
             'codecov --file "<work_dir>/coverage.xml"']

[tool.tox3.env.type]
deps = ["mypy >= 0.560, <1"]
commands = ["python -m mypy src --strict"]

[tool.tox3.env.doc]
skip_install = true
extras = ['doc']
commands = [ 'sphinx-build -d "<work_dir>/docs_doctree" doc "<work_dir>/docs_out" --color -W -b html',
             'sphinx-build -d "<work_dir>/docs_doctree" doc "<work_dir>/docs_out" --color -W -b linkcheck']

[tool.tox3.env.dev]
extras = ['testing']
use_develop = true
install_build_requires = true
install_for_build_requires = true
commands = ["pip list --format=columns",
           "python -c 'import sys;print(sys.version);print(sys.executable)'"]

