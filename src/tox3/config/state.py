""" configuration generated by running this tool"""
from pathlib import Path
from typing import Optional, List

""" holds all configuration information - input entries and runtime generated (states)"""


class State:
    pass


class CoreToxConfig(State):
    pass


class ToxConfig(CoreToxConfig):
    pass


class EnvConfig(CoreToxConfig):
    pass


class RunEnvConfig(EnvConfig):
    pass


class BuildEnvConfig(EnvConfig):
    _built_package: Optional[Path] = None
    _for_build_requires: List[str] = []

    @property
    def built_package(self) -> Optional[Path]:
        return self._built_package

    @built_package.setter
    def built_package(self, value: Path):
        self._built_package = value

    @property
    def for_build_requires(self) -> List[str]:
        return self._for_build_requires

    @for_build_requires.setter
    def for_build_requires(self, value: List[str]):
        self._built_package = value
